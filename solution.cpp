#include <iostream>
#include <string>

using namespace std;

/*

* * * *    *       *  * * * * *  * * * * *  * * * *   * * * * *  *       *       |   | 1, 
*      *   * *   * *      *          *      *      *      *       *     *        |   | 1, 
*       *  *  * *  *      *          *      * * * *       *        *   *         | x6| 1, 
*       *  *   *   *      *          *      * *           *          *           |   | 1, 
*      *   *       *      *          *      *   *         *          *           |   | 1, 
* * * *    *       *  * * * * *      *      *     *   * * * * *      *           |   | 1, 

[*, ,*, ,*, ,*, , ] [*, , , , , , , ,*] [*, ,*, ,*, ,*, ,*]   [*, ,*, ,*, ,*, ,*]   [*, ,*, ,*, ,*, , ]   [*, ,*, ,*, ,*, ,*]   [*, , , , , , , ,*]       |   | 1, 
[*, , , , , , ,*, ] [*, ,*, , , ,*, ,*] [ , , , ,*, , , , ]   [ , , , ,*, , , , ]   [*, , , , , , ,*, ]   [ , , , ,*, , , , ]   [ ,*, , , , , ,*, ]       |   | 1, 
[*, , , , , , , ,*] [*, , ,*, ,*, , ,*] [ , , , ,*, , , , ]   [ , , , ,*, , , , ]   [*, ,*, ,*, ,*, , ]   [ , , , ,*, , , , ]   [ , ,*, , , ,*, , ]       | x6| 1, 
[*, , , , , , , ,*] [*, , , ,*, , , ,*] [ , , , ,*, , , , ]   [ , , , ,*, , , , ]   [*, ,*, , , , , , ]   [ , , , ,*, , , , ]   [ , , , ,*, , , , ]       |   | 1, 
[*, , , , , , ,*, ] [*, , , , , , , ,*] [ , , , ,*, , , , ]   [ , , , ,*, , , , ]   [*, , , ,*, , , , ]   [ , , , ,*, , , , ]   [ , , , ,*, , , , ]       |   | 1, 
[*, ,*, ,*, ,*, , ] [*, , , , , , , ,*] [*, ,*, ,*, ,*, ,*]   [ , , , ,*, , , , ]   [*, , , , , ,*, , ]   [*, ,*, ,*, ,*, ,*]   [ , , , ,*, , , , ]       |   | 1, 


*/

/*
method's list:
1) clear        +
2) insert       +
3) replace      +
4) erase        +
5) append       +
6) +=           +
7) push_back    +
8) find         +
9) size         +
10) ""          +
11) +           +
12) substr      +
13) =           +
14) pop_back

*/

int main() {
    string res = "dMITRIY";     //"", =
    res.replace(0,1,"D");       //replace
    cout << res << endl;

    res.erase(0,1);             //erase
    res.insert(0, "D");         //insert

    res.clear();                //clear

    res.append("  ");           //append
    res += "* * * *    *       *  * * * * *  * * * * *  * * * *   * * * * *  *       *"; //+=
    if(res.find('\n') > res.size()) res.push_back('\n');    //push_back, find, size

    res = res + "*      *   * *   * *      *          *      *      *      *       *     * " + "\n"; //+

    res.substr(res.size()/2 + 1, 2); 
    if(!(res.substr(res.size()/2 + 1, 2) == "  ")) res.insert(res.size()/2 + 1, "  ");  //substr

    res += "  *       *  *  * *  *      *          *      * * * *       *        *   *  \n";
    res += "  *       *  *   *   *      *          *      * *           *          *    \n";
    res += "  *      *   *       *      *          *      *   *         *          *    \n";
    res += "  * * * *    *       *  * * * * *      *      *     *   * * * * *      *    \n";

    res.pop_back();     //pop_back


    cout << res;



    return 0;
}